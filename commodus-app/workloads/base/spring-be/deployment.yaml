apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-be
  namespace: riag-tech-team-ca-commodus-app
  labels:
    organisation: riag
    product-cluster: tech
    product: team-ca
    application: commodus-app
    container: spring-be
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  selector:
    matchLabels:
      organisation: riag
      product-cluster: tech
      product: team-ca
      application: commodus-app
      container: spring-be
  template:
    metadata:
      annotations:
        # Enable vault-agent-init
        #vault.hashicorp.com/agent-pre-populate: "true"
        # https://github.com/hashicorp/vault-k8s/issues/41#issuecomment-606637389
        #vault.hashicorp.com/agent-init-first: "true"
        #vault.hashicorp.com/agent-inject: "true"
        # The config-map tells vault-agent sidecar how to authenticate, which secrets are to be injected and in what format. See vault-injector-config-jedi.yaml
        #vault.hashicorp.com/agent-configmap: vault-injector-config
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9001'
        prometheus.io/path: "/actuator/prometheus"
        container.apparmor.security.beta.kubernetes.io/spring-be: runtime/default
      labels:
        organisation: riag
        product-cluster: tech
        product: team-ca
        application: commodus-app
        container: spring-be
        # "app" label becomes "destination_app" in the Istio metric labels.
        app: spring-be
    spec:
      serviceAccountName: ap-team-3qr8xgejbw37xb6jyqszsb
      containers:
        - name: spring-be
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: spring-be-env-vars
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 180
            httpGet:
              path: /actuator/health
              port: 9001
              scheme: HTTP
          readinessProbe:
            failureThreshold: 1
            initialDelaySeconds: 15
            httpGet:
              path: /actuator/health
              port: 9001
              scheme: HTTP
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-monitoring
              containerPort: 9001
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              memory: 512Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
